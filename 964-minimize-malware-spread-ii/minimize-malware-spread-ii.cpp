#include <bits/stdc++.h>
using namespace std;
class Solution {
public:
    int minMalwareSpread(vector<vector<int>>& graph, vector<int>& initial) {
        int n = graph.size();
        int best = -1, bestCount = INT_MAX;
        sort(initial.begin(), initial.end());
        for(auto rem : initial) {
            vector<bool> infected(n, false);
            queue<int>q;
            for(auto node : initial) {
                if(node==rem) continue;
                infected[node] = true;
                q.push(node);
            }
            while(!q.empty()){
                int cur = q.front(); q.pop();
                for(int nei = 0; nei < n; nei++){
                    if(nei==rem) continue;
                    if(graph[cur][nei] && !infected[nei]){
                        infected[nei] = true;
                        q.push(nei);
                    }
                }
            }
            int cnt = 0;
            for(int i=0; i<n; i++){
                if(infected[i]) cnt++;
            }
            if(cnt < bestCount){
                bestCount = cnt;
                best = rem;
            }
        }
        return best;
    }
};